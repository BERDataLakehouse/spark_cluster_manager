apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ WORKER_NAME }}
  namespace: {{ NAMESPACE }}
  labels:
    app: spark
    component: worker
    user: {{ USERNAME }}
    cluster-id: {{ CLUSTER_ID }}
spec:
  replicas: {{ WORKER_COUNT }}
  selector:
    matchLabels:
      app: spark
      component: worker
      user: {{ USERNAME }}
      cluster-id: {{ CLUSTER_ID }}
  template:
    metadata:
      labels:
        app: spark
        component: worker
        user: {{ USERNAME }}
        cluster-id: {{ CLUSTER_ID }}
    spec:
      {% if WORKER_NODE_SELECTOR_VALUES and WORKER_NODE_SELECTOR_VALUES.strip() %}
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.io/hostname
                    operator: In
                    values:
                      {% for node in WORKER_NODE_SELECTOR_VALUES.split(',') if node.strip() %}
                      - {{ node.strip() }}
                      {% endfor %}
      {% endif %}
      containers:
        - name: spark-worker
          image: {{ IMAGE }}
          imagePullPolicy: {{ IMAGE_PULL_POLICY }}
          env:
            - name: SPARK_MODE
              value: worker
            - name: SPARK_MASTER_URL
              value: spark://{{ MASTER_NAME }}.{{ NAMESPACE }}:{{ MASTER_PORT }}
            - name: SPARK_WORKER_CORES
              value: {{ WORKER_CORES }}
            - name: SPARK_WORKER_MEMORY
              value: {{ WORKER_MEMORY }}
            - name: SPARK_WORKER_WEBUI_PORT
              value: {{ WORKER_WEBUI_PORT }}
            - name: POSTGRES_USER
              value: {{ POSTGRES_USER }}
            - name: POSTGRES_PASSWORD
              value: {{ POSTGRES_PASSWORD }}
            - name: POSTGRES_DB
              value: {{ POSTGRES_DB }}
            - name: POSTGRES_URL
              value: {{ POSTGRES_URL }}
            - name: BERDL_REDIS_HOST
              value: {{ REDIS_HOST }}
            - name: BERDL_REDIS_PORT
              value: {{ REDIS_PORT }}
            - name: BERDL_DELTALAKE_WAREHOUSE_PATH
              value: {{ DELTALAKE_WAREHOUSE_DIR }}
            - name: SPARK_WORKER_PORT
              value: {{ SPARK_WORKER_PORT }}
            - name: BERDL_HIVE_METASTORE_URI
              value: {{ HIVE_METASTORE_URI }}

# TODO MATCH THESE WITH SPARK_WORKER_MEMORY AND SPARK_WORKER_CORES? I COULD BE WRONG ABOUT THIS
#          resources:
#            requests:
#              memory: "{{ WORKER_MEMORY }}"
#              cpu: "{{ WORKER_CORES }}"
#            limits:
#              memory: "{{ WORKER_MEMORY }}"
#              cpu: "{{ WORKER_CORES }}"