apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ WORKER_NAME }}
  namespace: {{ NAMESPACE }}
  labels:
    app: spark
    component: worker
    user: {{ USERNAME }}
    cluster-id: {{ CLUSTER_ID }}
spec:
  replicas: {{ WORKER_COUNT | int }}
  selector:
    matchLabels:
      app: spark
      component: worker
      user: {{ USERNAME }}
      cluster-id: {{ CLUSTER_ID }}
  template:
    metadata:
      labels:
        app: spark
        component: worker
        user: {{ USERNAME }}
        cluster-id: {{ CLUSTER_ID }}
    spec:
      enableServiceLinks: false
      {% if WORKER_NODE_SELECTOR_VALUES and WORKER_NODE_SELECTOR_VALUES.strip() %}
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.io/hostname
                    operator: In
                    values:
                      {% for node in WORKER_NODE_SELECTOR_VALUES.split(',') if node.strip() %}
                      - "{{ node.strip() }}"
                      {% endfor %}
      {% endif %}
      {% if BERDL_TOLERATIONS and BERDL_TOLERATIONS.strip() %}
      tolerations: {{ BERDL_TOLERATIONS }}
      {% endif %}
      containers:
        - name: spark-worker
          image: {{ IMAGE }}
          imagePullPolicy: {{ IMAGE_PULL_POLICY }}
          env:
            - name: SPARK_MODE
              value: "worker"
            - name: SPARK_MASTER_URL
              value: "spark://{{ MASTER_NAME }}.{{ NAMESPACE }}:{{ MASTER_PORT }}"
            - name: SPARK_WORKER_CORES
              value: "{{ SPARK_WORKER_CORES }}"
            - name: SPARK_WORKER_MEMORY
              value: "{{ SPARK_WORKER_MEMORY }}"
            - name: SPARK_WORKER_WEBUI_PORT
              value: "{{ SPARK_WORKER_WEBUI_PORT }}"
            - name: BERDL_POSTGRES_USER
              value: "{{ BERDL_POSTGRES_USER }}"
            - name: BERDL_POSTGRES_PASSWORD
              value: "{{ BERDL_POSTGRES_PASSWORD }}"
            - name: BERDL_POSTGRES_DB
              value: "{{ BERDL_POSTGRES_DB }}"
            - name: BERDL_POSTGRES_URL
              value: "{{ BERDL_POSTGRES_URL }}"
            - name: BERDL_REDIS_HOST
              value: "{{ BERDL_REDIS_HOST }}"
            - name: BERDL_REDIS_PORT
              value: "{{ BERDL_REDIS_PORT }}"
            - name: BERDL_DELTALAKE_WAREHOUSE_DIRECTORY_PATH
              value: "{{ BERDL_DELTALAKE_WAREHOUSE_DIRECTORY_PATH }}"
            - name: SPARK_WORKER_PORT
              value: "{{ SPARK_WORKER_PORT }}"
            - name: BERDL_HIVE_METASTORE_URI
              value: "{{ BERDL_HIVE_METASTORE_URI }}"
          resources:
            requests:
              memory: "{{ SPARK_WORKER_CONTAINER_MEMORY }}"
              cpu: "{{ SPARK_WORKER_CONTAINER_CORES }}"
            limits:
              memory: "{{ SPARK_WORKER_CONTAINER_MEMORY }}"
              cpu: "{{ SPARK_WORKER_CONTAINER_CORES }}"